#uselib "./shared.so"
#def prod = \x.\y.xfunction(product2)(x,y)
#def plus = \x.\y.xfunction(add2)(x,y)
#def show = \x.xfunction(show)(x) 
#def tt = \a.\b.a
#def ff = \a.\b.b
#def t1 = \a.\b.\c.a
#def t2 = \a.\b.\c.b
#def t3 = \a.\b.\c.c
#def pair = \a.\b.\p.((p)a)b
#def triple = \a.\b.\c.\p.(((p)a)b)c
#def showtriple = \t.\p.((((p)(show)(t1)t)(show)(t2)t)(show)(t3)t
#def fst  = \p.(p)tt
#def snd  = \p.(p)ff
#def empty = \k.\x.x
#def cons = \l.\a.\k.\x.((k)a)((l)k)x
#def head = \l.((l)tt)ff
#def tail = \l.\k.\x.(t3)((l) \a.\t.(((triple)tt)a)(((t1)t)((k)(t2)t)(t3)t)x ) (((triple)ff)\x.x)\x.x 
#def v1 = \k.\x.((k)1)((k)2)((k)3)x
#def v2 = \k.\x.((k)11)((k)7)((k)13)x
#def v3 = \k.\x.((k)0)((k)1)((k)2)((k)11)x
#def sumlist = \l.((l) \a.\b.((plus)a)b)0
#def bi = ((pair)2)3
#def dot = \l1.\l2. let step = \x.\y.((pair)(tail)(fst)y)((plus)((prod)(head)(fst)y)x)(snd)y in let base = ((pair)l2)0 in ((l1)step)base 

#def A = (((triple)1)2)3

#quit

((plus)((dot)v1)v2)0
(show)(head)v1
(v1)show

