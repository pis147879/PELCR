# Generated automatically from Makefile.in by configure.
ALL: default
##### User configurable options #####
PEXDIR      = pelcrexamples
TESTFILE    = "dd4.plcr"
ARCH        = LINUX
BASETYPE    = 'long long'
#MPIR_HOME   = /mpi-share/current-mpi
MPIR_HOME  = /usr/local
CC          = $(MPIR_HOME)/bin/mpicc
CCP         = $(MPIR_HOME)/bin/mpiCC
CLINKER     = $(CC)
CCC         = $(MPIR_HOME)/bin/mpiCC
CCLINKER    = $(CCC)
PROFILING   = $(PMPILIB)
#OPTFLAGS    = -DDEBUG -DWDEBUG -DMEMDEBUG -Wall -g -pg
#OPTFLAGS    = -D_DEBUG -DUSERTYPE=$(BASETYPE) -Wall -bind_at_load

COMPILINGRDIR = ./
#OPTFLAGS    = -D_DEBUG -Wall 
OPTFLAGS    = -D_DEBUG -DUSERTYPE=$(BASETYPE) -I $(COMPILINGRDIR)h -I .
#ARCHFLAGS   = -O2 -fstrict-aliasing -mtune=G5 -mcpu=G5 -mpowerpc64
#ARCHFLAGS   = -O2 -fstrict-aliasing -mtune=x86_64 -framework
ARCHFLAGS   = -g -fstrict-aliasing -mtune=x86_64
#-mpilog -mpitrace -mpianim -02 -DWDEBUG
#OPTFLAGS    =  -DWDEBUG -DMEMDEBUG -g -pg


########per il parser
LEX= flex
YACC = bison

### End User configurable options ###
#OSFLAGS	  = -DLINUX
OSFLAGS	  =
CFLAGS    = $(OPTFLAGS) $(ARCHFLAGS)
CCFLAGS   = $(CFLAGS)
FFLAGS    = $(OPTFLAGS)
OBJECTS	  = y.tab.o lex.yy.o read_back.o dvm.o io.o graph.o symbolic.o distribution.o print.o main.o buildgraph.o combustion.o

SRCS	  = lex.yy.c y.tab.c $(COMPILINGRDIR)read_back.c $(COMPILINGRDIR)dvm.c  $(COMPILINGRDIR)io.c $(COMPILINGRDIR)graph.c $(COMPILINGRDIR)symbolic.c $(COMPILINGRDIR)distribution.c $(COMPILINGRDIR)print.c $(COMPILINGRDIR)main.c $(COMPILINGRDIR)buildgraph.c $(COMPILINGRDIR)combustion.c
EXECS     = combustion.mac
RUN1  = echo "\#setdir \"$(PEXDIR)\" ; \#open \"$(TESTFILE)\""
RUN = $(MPIR_HOME)/bin/mpirun -np $(NP) $(EXECS) -- -I ciccio -loop 10000000 -o GML/prova -v -t
RUNTEST = $(RUN1)|$(RUN)
LIB_PATH    =
LIB_LIST    = -ldl -lm -ll -lc

default: gcombustion

all: default

lex.yy.c: $(COMPILINGRDIR)les.fl
	$(LEX) $(COMPILINGRDIR)les.fl

y.tab.c: $(COMPILINGRDIR)parser.y
	$(YACC) -d -v $(COMPILINGRDIR)parser.y -b y

objects: $(SRCS)
	$(CC) $(CFLAGS) $(OSFLAGS) -c $(SRCS)

gcombustion: objects y.tab.c
	$(CLINKER) $(ARCHFLAGS) $(OPTFLAGS) $(OSFLAG) -o $(EXECS) $(OBJECTS) $(LIB_PATH) $(LIB_LIST)

go:	NP=1
go:
	$(RUN)

go2: NP=2
go2:
	$(RUN)

test: NP=1
test:
	$(RUNTEST)

test2: NP=2
test2:
	$(RUNTEST)

test4: NP=4
test4:
	$(RUNTEST)	

clean:
	/bin/rm -f y.output y.tab.h y.tab.c lex.yy.c *.o run.*.log core combustion combustion.home combustion.ultra combustion.linux combustion.capital combustion.mac *.log combustion*.tex *.idx *.aux *.scn combustion*.dvi *.toc *~ DAT/*.* GML/* h/*~ ./Crypto/*.o ./Crypto/*.so *.so


sp:     rm Makefile
	ln -s Makefile.sp Makefile
	make all

ultra:
	rm Makefile
	ln -s Makefile.ultra Makefile
	make all

capital:
	rm Makefile
	ln -s Makefile.capital Makefile
	make all

parsifal:
	rm Makefile
	ln -s Makefile.parsifal Makefile
	make all

linux:
	rm Makefile
	ln -s Makefile.linux Makefile
	make all

mac:
	rm Makefile
	ln -s Makefile.mac Makefile
	make all

mac2:
	rm Makefile
	ln -s Makefile.mac2 Makefile
	make all
	
home: gcombustion
